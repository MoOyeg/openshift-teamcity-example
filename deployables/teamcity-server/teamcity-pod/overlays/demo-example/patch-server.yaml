apiVersion: apps/v1
kind: Deployment
metadata:
  name: teamcity-server-instance
  namespace: teamcity-server
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  selector:
    matchLabels:
      app: teamcity-server-instance
  replicas: 1
  template:
    metadata:
      labels:
        app: teamcity-server-instance
    spec:
      serviceAccountName: teamcity-sa
      volumes:
        - name: teamcity-data
          persistentVolumeClaim:
            claimName: teamcity-data-pvc
      containers:
        - name: teamcity-instance
          image: image-registry.openshift-image-registry.svc:5000/teamcity-server/openshift-teamcity-server-custom:latest
      initContainers:
      - name: init-restore
        image: image-registry.openshift-image-registry.svc:5000/teamcity-server/openshift-teamcity-server-custom:latest
        env:
          - name: TIDB_HOST
            value: basic-tidb
          - name: TIDB_PORT
            value: '4000'
          - name: SLEEP
            value: '5'
          - name: BACKUP_ZIP_URL
            value: https://github.com/MoOyeg/openshift-teamcity-example/raw/main/teamcity-infra/deployables/teamcity-server/teamcity-pod/overlays/demo-example/teamcity-backup.zip
        volumeMounts:
          - mountPath: "/data/teamcity_server/datadir"
            name: teamcity-data
        command: 
          - /bin/bash
          - -c
          - |
           
            #Install Unzip
            yum install unzip -y

            echo -n "Waiting for Teamcity Route to be Ready"
            until [[ -n $(oc get route/teamcity-server-instance -o jsonpath='{.spec.host}') ]];do echo "Route is not available" && sleep $SLEEP;done
            ROUTE=$(oc get route/teamcity-server-instance -o jsonpath='{.spec.host}')            
            curl -o /data/teamcity_server/datadir/teamcity-backup.zip -L -O https://github.com/MoOyeg/openshift-teamcity-example/raw/main/deployables/teamcity-server/teamcity-pod/overlays/demo-example/teamcity-backup.zip
            cd /data/teamcity_server/datadir/ && unzip teamcity-backup.zip 
            chown -R 1000:1000 /data/teamcity_server/datadir/
            chown -R 1000:1000 /opt/teamcity/logs
            ls .

            #Update APIServer
            APISERVER=$(oc whoami --show-server)
            find . -type f -name '*config.xml*' | xargs sed -i 's%https://api.cluster1.sandbox1532.opentlc.com:6443%'$APISERVER'%g'

            #Update Route
            find . -type f -name '*config.xml*' | xargs sed -i 's%http://teamcity-server-instance-teamcity-server.apps.cluster1.sandbox1532.opentlc.com%'$ROUTE'%g'
            find . -type f -name '*agent_type_param*' | xargs sed -i 's%http://teamcity-server-instance-teamcity-server.apps.cluster1.sandbox1532.opentlc.com%'$ROUTE'%g'
            find . -type f -name '*db_heartbeat*' | xargs sed -i 's%http://teamcity-server-instance-teamcity-server.apps.cluster1.sandbox1532.opentlc.com%'$ROUTE'%g'

          
                        

                        
                        